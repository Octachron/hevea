\usepackage{keyval}
\@primitives{listings}
%%%%%%%%%%% interface keyval
\def\lst@define@key#1#2{\define@key{lst}{#1}{\@funcall{#2}{##1}}}
\newenvironment{lst@protect}
  {\def\%{\@print{\%}}%
   \def\#{\@print{\#}}%
   \def\${\@print{\$}}%
   \def\{{\@print{\{}}%
   \def\}{\@print{\}}}%
   \def\_{\@print{\_}}%
   \def\&{\@print{\&}}}
  {}
\def\lst@define@key@opt#1#2{\define@key{lst}{#1}
  {\lst@funcall{#2}{\begin{lst@protect}##1\end{lst@protect}}}}
%%%%%%%%%%%
% Helpers %
%%%%%%%%%%%
\def\lstinfo#1{\typeout{LST, #1}}
\def\lst@iter#1#2{\@iter#1,#2}
%%%%%%%% Interface with keyval
\def\lstset#1{\@setkeys{lst}{#1}}
%%%%%%%% Def if not empty
\newcommand{\lst@defne}[2]{\ifx#1\@empty\def#1{#2}\fi}
%%%%%%%%%%%%
% Hooks    %
%%%%%%%%%%%%
\newcommand{\lst@Hook}[1]
  {\newtokens{\csname lsthk@#1\endcsname}}
\newcommand{\lst@UseHook}
  {\csname lsthk@#1\endcsname}
\newcommand{\lst@AddToHook}[2]
  {\addtokens{\csname lsthk@#1\endcsname}{#2}}
\newcommand{\lst@AddToHookExe}[2]
  {\lst@AddToHook{#1}{#2}#2}
\lst@Hook{EOL}\lst@Hook{InitVarEOL}
\lst@Hook{InitVarBOL}\lst@Hook{EveryLine}
\lst@Hook{PreSet}
\lst@Hook{InitVar}
\lst@Hook{Init}
\lst@Hook{DeInit}
\lst@Hook{SelectCharTable}
\lst@Hook{SetLanguage}
%%%%%%%%%%%%
% Keywords %
%%%%%%%%%%%%
\newtokens{\lst@allkeywords}
\def\lst@record@kwds#1{\addtokens{\lst@allkeywords}{#1,}}
\newtokens{\lst@allotherkeywords}
\def\lst@record@okwds#1{\addtokens{\lst@allotherkeywords}{#1,}}
\lst@AddToHook{InitVar}{\lstinfo{Keywords: \lst@allkeywords}}
\lst@addToHook{SelectLanguage}
  {\lst@delete@kwds\lst@allkeywords%
  \lst@delete@okwds\lst@allotherkeywords}
\def\lst@install@kwd#1#2{\def\csname lstk@\@rawchars{#2}\endcsname{#1}}
\def\lst@install@kwds
  #1#2{%
    \lst@record@kwds{#2}%
    \lst@iter{\lst@install@kwd{#1}}{#2}}
\def\lst@install@okwds
  #1#2{%
    \lst@record@okwds{#2}%
    \lst@iter{\lst@install@kwd{#1}}{#2}}
\def\lst@delete@kwd
  #1{\def\csname lstk@\@rawchars{#1}\endcsname{\lst@identifier@style}}
\def\lst@delete@okwds#1{\lst@iter{\lst@delete@okwd}{#1}}
\def\lst@delete@okwd
  #1{\def\csname lstk@\@rawchars{#1}\endcsname{}}
\def\lst@delete@kwds#1{\lst@iter{\lst@delete@kwd}{#1}}
\lst@define@key{keywords}{\lst@install@kwds{\lst@kwd@style}}
\lst@define@key{morekeywords}{\lst@install@kwds{\lst@kwd@style}}
\lst@define@key{deletekeywords}{\lst@delete@kwds}
\lst@define@key{ndkeywords}{\lst@install@kwds{\lst@ndkwd@style}}
\lst@define@key{morendkeywords}{\lst@install@kwds{\lst@ndkwd@style}}
\lst@define@key{deletendkeywords}{\lst@delete@kwds}
\lst@define@key{rdkeywords}{\lst@install@kwds{\lst@rdkwd@style}}
\lst@define@key{morerdkeywords}{\lst@install@kwds{\lst@rdkwd@style}}
\lst@define@key{deleterdkeywords}{\lst@delete@kwds}
\lst@define@key{otherkeywords}{\lst@install@okwds{\lst@kwd@style}}
\lst@define@key{moreotherkeywords}{\lst@install@okwds{\lst@kwd@style}}
\lst@define@key{deleteotherkeywords}{\lst@delete@okwds}
%%%%%%%
\define@key{lst}{keywordstyle}{\def\lst@kwd@style##1{#1{##1}}}
\define@key{lst}{ndkeywordstyle}{\def\lst@ndkwd@style##1{#1{##1}}}
\define@key{lst}{rdkeywordstyle}{\def\lst@rdkwd@style##1{#1{##1}}}
\define@key{lst}{otherkeywordstyle}{\def\lst@kwd@style##1{#1{##1}}}
\define@key{lst}{identifierstyle}{\def\lst@identifier@style##1{#1{##1}}}
\define@key{lst}{nonkeywordstyle}{\def\lst@identifier@style##1{#1{##1}}}
\define@key{lst}{basicstyle}{\def\lst@basic@style{#1}}
\define@key{lst}{commentstyle}{\def\lst@comment@style{#1}}
\define@key{lst}{stringstyle}{\def\lst@string@style{#1}}
\lstset
  {keywordstyle={},
  ndkeywordstyle=\lst@kwd@style,
  rdkeywordstyle=\lst@kwd@style,
  identifierstyle={},
  basicstyle={},
  commentstyle={},
  stringstyle={}}
%%%%%% Language definitions
\newcommand{\lst@mklang}[2][]
  {\ifthenelse{\equal{#1}{}}
    {lstlang@#2@\csname lstdd@#2\endcsname}
    {lstlang@#2@#1}}
\newcommand{\lst@language@key}[2][]
  {\lsthk@SetLanguage\csname\lst@mklang[#1]{#2}\endcsname}
\lst@define@key@opt{language}{\lst@language@key}
\newcommand{\lst@definelanguage@}[3]
  {\def\csname\lst@mklang[#2]{#1}\endcsname{\lstset{#3}}}
\newcommand{\lst@derivelanguage@}[5]
  {\def\csname\lst@mklang[#2]{#1}\endcsname{\csname\lst@mklang[#4]{#3}\endcsname\lstset{#5}}}
%%%%%%% Indentation
\define@key{lst}{indent}[1]{\def\lst@doindent{\hspace{#1}}}
\newcommand{\lst@doindent}{}
%%%%%%% Lines
\newcounter{lstlabel}
\newcounter{lst@firstline}
\newcommand{\lst@saved@lastline}
  {\@ifundefined{thelst@saved@\lst@intname}
    {0}
    {\value{lst@saved@\lst@intname}}}
\define@key{lst}{firstlabel}{\def\lst@firstline{#1}}
\define@key{lst}{advancelabel}
  {\def\lst@firstline{\lst@saved@lastline+#1+1}}
\lst@AddToHook{Init}
  {\@ifundefined{lst@firstline}
    {\ifthenelse{\equal{\lst@intname}{}}
      {\setcounter{lst@firstline}{0}}
      {\setcounter{lst@firstline}{\lst@saved@lastline}}}
    {\setcounter{lst@firstline}{\lst@firstline-1}}}
\lst@AddToHook{DeInit}
  {\@ifundefined{thelst@saved@\lst@intname}
     {\newcounter{lst@saved@\lst@intname}}
     {}%
  \setcounter{lst@saved@\lst@intname}{\value{lstlabel}}}
\lst@AddToHook{InitVar}{\setcounter{lstlabel}{\value{lst@firstline}}}
\define@key{lst}{labelstyle}{\@forcecommand{\lst@label@style}[1]{#1{##1}}}
\newcommand{\lst@label@style}[1]{#1}
\define@key{lst}{labelstep}{\def{\lst@labelstep}{#1}}
\newcommand{\lst@labelstep}{0}
\define@key{lst}{labelsep}{\def{\lst@labelsep}{\hspace{#1}}}
\newcommand{\lst@labelsep}{\hspace{1em}}
\newcommand{\lst@pad}[1]{\@pad{ }{4}{#1}}
\newcommand{\lst@linenumber@}[1]
  {{\@clearstyle\lst@basic@style\lst@label@style{\lst@pad{#1}}}\lst@labelsep}
\newcommand{\lst@linenumber}
  {\ifthenelse{\lst@labelstep=0}
     {}
     {\ifthenelse
       {0=\value{lstlabel}-\(\value{lstlabel}/\lst@labelstep\)*\lst@labelstep}
       {\lst@linenumber@{\thelstlabel}}
       {\lst@linenumber@{}}}}
\lst@AddToHook{InitVarEOL}{\stepcounter{lstlabel}}
%%%%%% Ignore input
\newcommand{\lst@gobble}{0}
\define@key{lst}{gobble}{\def\lst@gobble{#1}}
\newcommand{\lst@first}{1}
\newcommand{\lst@last}{9999}
\define@key{lst}{first}{\def\lst@first{#1}}
\define@key{lst}{last}{\def\lst@last{#1}}
% print key
\define@key{lst}{print}[true]{\def\lst@print{#1}}
\setboolean{lst@print}{true}
\lst@AddToHook{Init}
  {\@ifundefined{lst@print}{}
     {\setboolean{lst@print}{\lst@boolean{\lst@print}}}}
\lst@AddToHook{DeInit}{\setboolean{lst@print}{true}}
%%%%%%% Strings
\newcommand{\lst@stringizer@key}[2][]
  {\def\lst@quote@stringizers{\@rawchars{#1}}%
  \def\lst@stringizers{\@rawchars{#2}}}
\lst@define@key@opt{stringizer}{\lst@stringizer@key}
\lst@AddToHookExe{SetLanguage}
  {\def\lst@stringizers{}\def\lst@quote@stringizers{}}
%%%%%% Comments
% Line comments
\newcommand{\lst@LC@key}[1]
  {\lst@defne{\lst@LC}{\@rawchars{#1}}}
\define@key{lst}{commentline}{\lst@LC@key{#1}}
\lst@AddToHookExe{SetLanguage}{\def\lst@LC{}}
% Balanced comments
\newcommand{\lst@NC@key}[2]
  {\lst@defne\lst@BNC{\@rawchars{#1}}\lst@defne\lst@ENC{\@rawchars{#2}}}
\define@key[2]{lst}{nestedcomment}{\lst@NC@key{#1}{#2}}
\lst@AddToHookExe{SetLanguage}
  {\def\lst@BNC{}\def\lst@ENC{}}
\newcommand{\lst@SC@key}[2]
   {\lst@defne\lst@BBC@one{\@rawchars{#1}}\lst@defne\lst@EBC@one{\@rawchars{#2}}}
\define@key[2]{lst}{singlecomment}{\lst@SC@key{#1}{#2}}
\lst@AddToHookExe{SetLanguage}
  {\def\lst@BBC@one{}\def\lst@EBC@one{}}
\newcommand{\lst@DC@key}[4]
   {\lst@defne\lst@BBC@two{\@rawchars{#1}}%
   \lst@defne\lst@EBC@two{\@rawchars{#2}}%
   \lst@defne\lst@BBC@three{\@rawchars{#3}}%
   \lst@defne\lst@EBC@three{\@rawchars{#4}}}
\define@key[4]{lst}{doublecomment}{\lst@DC@key{#1}{#2}{#3}{#4}}
\lst@AddToHookExe{SetLanguage}
 {\def\lst@BBC@two{}%
  \def\lst@EBC@two{}%
  \def\lst@BBC@three{}%
  \def\lst@EBC@three{}}
%%%%%%% Extended chars
\lst@AddToHookExe{DeInit}{\setboolean{lst@extendedchars}{false}}
\lst@AddToHookExe{SetLanguage}{\def\lst@extendedchars{false}}
\define@key{lst}{extendedchars}[true]{\def\lst@extendedchars{#1}}
\lst@AddToHook{SelectCharTable}
  {\lstinfo{Extended Chars: \lst@extendedchars}%
  \setboolean{lst@extendedchars}{\lst@boolean{\lst@extendedchars}}}
%%%%%%% Output
\def\lst@output#1{%
%\lstinfo{Output: ``#1''}%
\@ifundefined{lstk@#1}
  {\lst@identifier@style{#1}}
  {\csname lstk@\@rawchars{#1}\endcsname{#1}}}
\def\lst@output@other#1{%
%\lstinfo{Output other: ``#1''}%
\@ifundefined{lstk@#1}
  {#1}
  {\csname lstk@\@rawchars{#1}\endcsname{#1}}}
%%%%%%% User interface
\newcommand{\lstinputlisting}[2][]
  {\@scaninput{\lstinfo{INPUT: ``#1'' ``#2''}\begin{lstlisting}[#1]{}
}{#2}{\end{lstlisting}}}
\let\lstdefinelanguage\lst@definelanguage
%%%%%% Driver files
\lst@definelanguage[Objective]{Caml}[light]{Caml}
  {deletekeywords={not,prefix,value,where},
   morekeywords={assert,asr,class,closed,constraint,external,false,functor,include,inherit,land,lazy,lor,lsl,lsr,lxor,method,mod,module,new,open,parser,private,sig,struct,true,val,virtual,when}}
\lst@definelanguage[light]{Caml}
  {keywords={and,as,begin,do,done,downto,else,end,exception,for,fun,function,if,in,let,match,mutable,not,of,or,prefix,rec,then,to,try,type,value,where,while,with},
   sensitive,
   nestedcomment={(*}{*)},
   stringizer=[b]",
   directives={open,close,include},
   extendedchars=true
  }[keywords,comments,strings,directives]%
\lst@definelanguage{Java}%
  {keywords={abstract,boolean,break,byte,case,catch,char,class,const,%
      continue,default,do,double,else,extends,final,finally,float,for,%
      goto,if,implements,import,instanceof,int,interface,long,native,%
      new,null,package,private,protected,public,return,short,static,%
      super,switch,synchronized,this,throw,throws,transient,try,void,%
      volatile,while,true,false},%
   sensitive,%
   commentline=//,%
   singlecomment={/*}{*/},%
   stringizer=[b]"%
  }[keywords,comments,strings]%
